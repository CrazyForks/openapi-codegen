{{range $val :=.Output.Header}}
{{- $val}}
{{end}}

use serde::{Deserialize, Serialize};
use std::iter::Map;


{{range $val :=.Models}}
{{template "model" $val}}
{{end}}


{{define "model"}}

/**
 * {{.Description}}
 * {{.Summary}}
 */
#[derive(Debug, Clone)]
pub struct {{.Type.Expression}} {
    {{range $val :=.Properties -}}
    /**
     * {{.Description}}
     * {{.Summary}}
     */
    pub {{$val.Alias}}: Option<{{$val.Type.Expression}}>,
    {{end}}
}
{{end}}