{{range $val :=.Output.Header}}
{{- $val}}
{{end}}


{{range $val :=.Apis}}
{{template "api" $val}}
{{end}}


{{define "api"}}
/**
 * {{.Description}}
 */
public class {{Capitalize .Name}}
{

    private IApiClient client;

    public {{Capitalize .Name}}(IApiClient client) {
        this.client = client;
    }

	{{range $val :=.Paths -}}
	{{template "path" $val}}
	{{end}}
}
{{end}}


{{define "path"}}
	/**
	 * {{.Description}}
	 * {{.Summary}}
	 */
    public Task<{{.Response.Expression}}> {{.Name}}({{template "parameters" .}}) {
        {{ if .Queries -}}
        var param = new Dictionary<string,dynamic>();
        {{range $idx,$val := .Parameters -}}
        param["{{$val.Name}}"] = {{$val.Alias}};
        {{end}}
        {{- else -}}
        {{if .Request}}{{else}}var param = new Dictionary<string,dynamic>();{{end}}
        {{- end}}
        return client.{{Capitalize .Method}}<{{if eq .Method "get"}}{{.Response.Expression}}{{else}},{{end}}>({{.Path}}, {{- if .Request}}body{{else}}param{{end}});
    }
{{end}}


{{define "parameters"}}
{{- range $idx,$val := .Parameters -}}{{if gt $idx 0}},{{end}} {{$val.Type.Expression}} {{$val.Alias}}{{- end -}}
{{end}}
